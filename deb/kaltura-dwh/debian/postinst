#!/bin/bash -e 
#===============================================================================
#          FILE: kaltura-dwh-config.sh
#         USAGE: ./kaltura-dwh-config.sh 
#   DESCRIPTION: configure the server as a DWH node. 
#       OPTIONS: ---
# 	LICENSE: AGPLv3+
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: ---
#        AUTHOR: Jess Portnoy (), <jess.portnoy@kaltura.com>
#  ORGANIZATION: Kaltura, inc.
#       CREATED: 01/02/14 09:25:54 EST
#      REVISION:  ---
#===============================================================================

#set -o nounset                              # Treat unset variables as an error

RC_FILE=/etc/kaltura.d/system.ini
if [ ! -r "$RC_FILE" ];then
	echo "${BRIGHT_RED}Could not find $RC_FILE so, exiting..${NORMAL}"
	echo "Please run dpkg-reconfigure kaltura-base and then dpkg-reconfigure kaltura-dwh"
	exit 2
fi
. $RC_FILE
KALTURA_FUNCTIONS_RC=$BASE_DIR/bin/kaltura-functions.rc
if [ ! -r "$KALTURA_FUNCTIONS_RC" ];then
	echo "Could not find $KALTURA_FUNCTIONS_RC so, exiting.."
	exit 3
fi
. $KALTURA_FUNCTIONS_RC
#if [ -r $CONSENT_FILE ];then
#	. $CONSENT_FILE
#elif [ -z "$USER_CONSENT" ];then
#	get_tracking_consent
#fi
#. $CONSENT_FILE
trap - ERR
TIMEZ=`get_tz`
send_install_becon `basename $0` $TIMEZ install_start 0 

TABLES=`echo "show tables" | mysql -h$DWH_HOST -u$SUPER_USER -p$SUPER_USER_PASSWD -P$DWH_PORT kalturadw 2> /dev/null`
if [ -z "$TABLES" ];then 
	echo -e "${CYAN}Deploying analytics warehouse DB, please be patient as this may take a while...
Output is logged to $BASE_DIR/dwh/logs/dwh_setup.log.${NORMAL}
"
	trap 'my_trap_handler "${LINENO}" ${$?}' ERR
	$BASE_DIR/dwh/setup/dwh_setup.sh -u$SUPER_USER -k $BASE_DIR/pentaho/pdi/ -d$BASE_DIR/dwh -h$DWH_HOST -P$DWH_PORT -p$SUPER_USER_PASSWD | tee $BASE_DIR/dwh/logs/dwh_setup.log
else
cat << EOF
The Kaltura DWH DB seems to already be installed.
DB creation will be skipped.
EOF
fi

sed  "s#\(@DWH_DIR@\)#\1 -k $BASE_DIR/pentaho/pdi/kitchen.sh#g" $APP_DIR/configurations/cron/dwh.template >$APP_DIR/configurations/cron/dwh
cp $BASE_DIR/dwh/.kettle/kettle.template.properties $BASE_DIR/dwh/.kettle/kettle.properties
sed -i -e "s#@DWH_DIR@#$BASE_DIR/dwh#g" -e "s#@APP_DIR@#$APP_DIR#g" -e "s#@EVENTS_FETCH_METHOD@#local#g" -e "s#@LOG_DIR@#$LOG_DIR#g" -e "s#@DB1_HOST@#$DB1_HOST#g" -e "s#@DB1_PORT@#$DB1_PORT#g" -e "s#@DWH_HOST@#$DWH_HOST#g" -e "s#@DB1_PORT@#$DWH_PORT#g"  -e "s#@DB1_USER@#$DB1_USER#g" -e "s#@DWH_USER@#$DWH_USER#g" -e "s#@DWH_PASS@#$DWH_PASS#g" -e "s#@DWH_PORT@#$DWH_PORT#g" -e "s#@EVENTS_LOGS_DIR@#$WEB_DIR/logs#g" -e "s#@DB2_PORT@#$DWH_PORT#g" -e "s#@DB2_HOST@#$DWH_HOST#g" $APP_DIR/configurations/cron/dwh $BASE_DIR/dwh/.kettle/kettle.properties
chown -R $OS_KALTURA_USER $BASE_DIR/dwh/cycles/
ln -sf $APP_DIR/configurations/cron/dwh /etc/cron.d/kaltura-dwh
echo -e "${CYAN}DWH configured.${NORMAL}"
chown -R $OS_KALTURA_USER $BASE_DIR/dwh/logs $BASE_DIR/pentaho/pdi/
send_install_becon `basename $0` $TIMEZ install_success 0 
